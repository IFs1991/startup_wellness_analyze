version: '3.8'

services:
  frontend:
    build:
      context: ./frontend  # frontend ディレクトリをビルドコンテキストとして指定
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://backend:8000/api}
    restart: unless-stopped
    ports:
      - "80:3000"
    environment:
      # 実行時の環境変数 (ビルド時にも一部使用される可能性あり)
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://backend:8000/api}
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
      - NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    depends_on:
      - backend
    networks:
      - app-network

  # バックエンドサービスの定義
  backend:
    # backend サービスのイメージを指定してください。
    # ローカルでビルドする場合は build セクションを、
    # Docker Hub などから取得する場合は image セクションを記述します。
    # 例:
    # build: ./backend
    # image: your-dockerhub-username/backend:latest
    image: ${BACKEND_IMAGE:-backend:latest} # 環境変数またはデフォルト値を使用
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-1spel!2stack3win}
      - POSTGRES_DB=${POSTGRES_DB:-startup_wellness_analyze}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:1spel!2stack3win@db:5432/startup_wellness_analyze}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8000,http://localhost:8080,http://frontend:80,http://localhost}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DEBUG=${DEBUG:-false}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network

  # データベースサービスの定義
  db:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-1spel!2stack3win}
      - POSTGRES_DB=${POSTGRES_DB:-startup_wellness_analyze}
    volumes:
      # 名前付きボリュームを使用してデータを永続化
      - postgres_data:/var/lib/postgresql/data
    ports:
      # ホストの 5432 をコンテナの 5432 にマッピング（開発時など必要に応じて）
      - "5432:5432"
    networks:
      - app-network

# ネットワークの定義
networks:
  app-network:
    driver: bridge

# ボリュームの定義
volumes:
  postgres_data: # データベースデータ用の名前付きボリューム