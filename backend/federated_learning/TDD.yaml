# フェデレーテッド学習システム実用化計画表
# TDD（テスト駆動開発）ベースの実装計画

project:
  name: "フェデレーテッド学習システム実用化プロジェクト"
  version: "3.0.0"
  duration: "6ヶ月（24週間）"
  methodology: "TDD + アジャイル（2週間スプリント）"
  start_date: "2025-06-01"
  end_date: "2025-11-30"

# チーム構成
team:
  roles:
    - name: "テックリード"
      count: 1
      responsibilities: ["アーキテクチャ設計", "コードレビュー", "技術的意思決定"]
    - name: "バックエンドエンジニア"
      count: 3
      responsibilities: ["サーバー実装", "セキュリティ実装", "API開発"]
    - name: "MLエンジニア"
      count: 2
      responsibilities: ["ML最適化", "差分プライバシー実装", "モデル評価"]
    - name: "DevOpsエンジニア"
      count: 2
      responsibilities: ["インフラ構築", "CI/CD", "監視システム"]
    - name: "QAエンジニア"
      count: 2
      responsibilities: ["E2Eテスト", "セキュリティテスト", "パフォーマンステスト"]

# TDD原則
tdd_principles:
  red_green_refactor:
    red: "失敗するテストを最初に書く"
    green: "テストを通す最小限のコードを書く"
    refactor: "コードを改善し、テストが通ることを確認"
  coverage_targets:
    unit_test: 90
    integration_test: 80
    e2e_test: 70
  test_pyramid:
    unit: 70  # 全テストの70%
    integration: 20  # 全テストの20%
    e2e: 10  # 全テストの10%

# フェーズ別実装計画
phases:
  - phase_id: "phase_1"
    name: "基盤セキュリティ層の実装"
    duration: "4週間"
    sprints: ["sprint_1", "sprint_2"]
    status: "COMPLETED"
    completion_date: "2025-05-24"
    test_results:
      total_tests: 34
      passed_tests: 34
      coverage: "100%"

    objectives:
      - "完全なセキュア集約の実装"
      - "mTLS認証基盤の構築"
      - "暗号化通信の確立"

    tasks:
      - task_id: "sec_1.1"
        name: "Paillier暗号ライブラリの統合"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-01-26"
        test_results:
          total_tests: 9
          passed_tests: 9
          coverage: "100%"
        tdd_steps:
          - step: "RED: Paillier暗号化/復号化のユニットテスト作成"
            tests:
              - "test_paillier_encryption_decryption"
              - "test_homomorphic_addition"
              - "test_key_generation"
          - step: "GREEN: Paillier暗号実装"
            implementation:
              - "PaillierCrypto クラスの実装"
              - "鍵生成機能"
              - "準同型加算機能"
          - step: "REFACTOR: パフォーマンス最適化"
            optimization:
              - "並列暗号化処理"
              - "メモリ効率の改善"

      - task_id: "sec_1.2"
        name: "セキュア集約プロトコルの完全実装"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア", "MLエンジニア"]
        dependencies: ["sec_1.1"]
        status: "COMPLETED"
        completion_date: "2025-01-27"
        test_results:
          total_tests: 9
          passed_tests: 9
          coverage: "100%"
        tdd_steps:
          - step: "RED: セキュア集約の統合テスト作成"
            tests:
              - "test_secure_aggregation_with_dropout"
              - "test_malicious_client_detection"
              - "test_aggregation_correctness"
          - step: "GREEN: プロトコル実装"
            implementation:
              - "マスキング機構"
              - "シークレット共有"
              - "検証可能な集約"
          - step: "REFACTOR: エラーハンドリング強化"

      - task_id: "sec_1.3"
        name: "mTLS認証システム"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア", "DevOpsエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-05-24"
        test_results:
          total_tests: 8
          passed_tests: 8
          coverage: "100%"
        tdd_steps:
          - step: "RED: 認証フローのE2Eテスト"
            tests:
              - "test_client_certificate_validation"
              - "test_certificate_rotation"
              - "test_unauthorized_access_rejection"
          - step: "GREEN: mTLS実装"
            implementation:
              - "証明書管理システム"
              - "Nginx/Envoy設定"
              - "クライアント認証ミドルウェア"
          - step: "REFACTOR: 認証パフォーマンス最適化"

      - task_id: "sec_1.4"
        name: "監査ログシステム"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-05-24"
        test_results:
          total_tests: 8
          passed_tests: 8
          coverage: "100%"
        tdd_steps:
          - step: "RED: 監査ログ要件のテスト"
            tests:
              - "test_audit_log_completeness"
              - "test_log_tamper_detection"
              - "test_gdpr_compliance_logs"
          - step: "GREEN: 監査システム実装"
          - step: "REFACTOR: ログストレージ最適化"

  - phase_id: "phase_2"
    name: "差分プライバシーの本格実装"
    duration: "4週間"
    sprints: ["sprint_3", "sprint_4"]
    status: "COMPLETED"
    completion_date: "2025-01-20"
    test_results:
      total_tests: 16
      passed_tests: 16
      coverage: "100%"

    objectives:
      - "RDPアカウンタントの実装"
      - "適応的クリッピングの実装"
      - "プライバシー予算管理システム"

    tasks:
      - task_id: "dp_2.1"
        name: "RDPアカウンタント実装"
        duration: "1週間"
        assigned_to: ["MLエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-01-20"
        test_results:
          total_tests: 8
          passed_tests: 8
          coverage: "100%"
        tdd_steps:
          - step: "RED: RDP計算の数学的正確性テスト"
            tests:
              - "test_rdp_composition"
              - "test_privacy_loss_calculation"
              - "test_epsilon_delta_conversion"
          - step: "GREEN: アカウンタント実装"
            implementation:
              - "RDPAccounter クラス"
              - "プライバシー損失追跡"
              - "最適なノイズ計算"
          - step: "REFACTOR: 計算効率化"

      - task_id: "dp_2.2"
        name: "適応的勾配クリッピング"
        duration: "1週間"
        assigned_to: ["MLエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-01-20"
        test_results:
          total_tests: 8
          passed_tests: 8
          coverage: "100%"
        tdd_steps:
          - step: "RED: 適応的クリッピングのテスト"
            tests:
              - "test_adaptive_clipping_convergence"
              - "test_gradient_norm_estimation"
              - "test_clipping_bias"
          - step: "GREEN: 実装"
          - step: "REFACTOR: GPU最適化"

      - task_id: "dp_2.3"
        name: "プライバシー予算管理API"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア"]
        dependencies: ["dp_2.1"]
        tdd_steps:
          - step: "RED: 予算管理APIテスト"
            tests:
              - "test_budget_allocation"
              - "test_budget_exhaustion_handling"
              - "test_multi_model_budget_tracking"
          - step: "GREEN: API実装"
          - step: "REFACTOR: データベース最適化"

      - task_id: "dp_2.4"
        name: "差分プライバシー統合テスト"
        duration: "1週間"
        assigned_to: ["MLエンジニア", "QAエンジニア"]
        dependencies: ["dp_2.1", "dp_2.2", "dp_2.3"]
        tdd_steps:
          - step: "統合テストスイート作成"
          - step: "プライバシー保証の実証テスト"
          - step: "パフォーマンスベンチマーク"

  - phase_id: "phase_3"
    name: "データ永続化層とスケーラビリティ"
    duration: "4週間"
    sprints: ["sprint_5", "sprint_6"]
    status: "COMPLETED"
    completion_date: "2025-05-26"
    test_results:
      total_tests: 74
      passed_tests: 74
      coverage: "100%"

    objectives:
      - "PostgreSQLとの完全統合"
      - "分散キャッシュシステム"
      - "モデルバージョニング"
      - "分散トランザクション管理"

    tasks:
      - task_id: "data_3.1"
        name: "データベース層の実装"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-05-26"
        test_results:
          total_tests: 14
          passed_tests: 14
          coverage: "100%"
        tdd_steps:
          - step: "RED: リポジトリパターンのテスト"
            tests:
              - "test_model_repository_crud"
              - "test_client_registry_operations"
              - "test_training_history_tracking"
              - "test_transaction_isolation"
          - step: "GREEN: SQLAlchemy実装"
            implementation:
              - "ORMモデル定義"
              - "マイグレーションスクリプト"
              - "接続プール管理"
          - step: "REFACTOR: クエリ最適化"

      - task_id: "data_3.2"
        name: "Redis分散キャッシュ"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア", "DevOpsエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-05-26"
        test_results:
          total_tests: 22
          passed_tests: 22
          coverage: "100%"
        tdd_steps:
          - step: "RED: キャッシュ一貫性テスト"
            tests:
              - "test_cache_invalidation"
              - "test_distributed_locking"
              - "test_cache_warming"
          - step: "GREEN: Redis統合"
          - step: "REFACTOR: キャッシュ戦略最適化"

      - task_id: "data_3.3"
        name: "モデルバージョニングシステム"
        duration: "1週間"
        assigned_to: ["MLエンジニア", "バックエンドエンジニア"]
        dependencies: ["data_3.1"]
        status: "COMPLETED"
        completion_date: "2025-05-26"
        test_results:
          total_tests: 21
          passed_tests: 21
          coverage: "100%"
        tdd_steps:
          - step: "RED: バージョニング要件テスト"
            tests:
              - "test_model_versioning_workflow"
              - "test_rollback_capability"
              - "test_version_comparison"
          - step: "GREEN: DVC/MLflow統合"
          - step: "REFACTOR: ストレージ最適化"

      - task_id: "data_3.4"
        name: "分散トランザクション管理"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-05-26"
        test_results:
          total_tests: 17
          passed_tests: 17
          coverage: "68%"
        tdd_steps:
          - step: "RED: 分散トランザクションテスト"
            tests:
              - "test_two_phase_commit"
              - "test_saga_pattern"
              - "test_eventual_consistency"
          - step: "GREEN: Sagaパターン実装"
          - step: "REFACTOR: エラーリカバリー強化"

  - phase_id: "phase_4"
    name: "高可用性とフォルトトレランス"
    duration: "4週間"
    sprints: ["sprint_7", "sprint_8"]

    objectives:
      - "クライアント障害処理"
      - "自動フェイルオーバー"
      - "災害復旧機能"

    tasks:
      - task_id: "ha_4.1"
        name: "クライアント健全性監視"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-05-26"
        test_results:
          total_tests: 14
          passed_tests: 14
          coverage: "100%"
        tdd_steps:
          - step: "RED: ヘルスチェックテスト"
            tests:
              - "test_heartbeat_mechanism"
              - "test_client_timeout_detection"
              - "test_straggler_handling"
          - step: "GREEN: 監視システム実装"
            implementation:
              - "HealthMonitor クラス実装"
              - "HeartbeatManager 実装"
              - "ClientHealthStatus データモデル"
              - "HealthCheckResult 実装"
              - "HealthMetrics 統計機能"
              - "Windows環境対応・非同期処理"
          - step: "REFACTOR: 検知精度向上"
            optimization:
              - "バックグラウンド監視ループ"
              - "自動クリーンアップ機能"
              - "ストラグラー検出アルゴリズム最適化"

      - task_id: "ha_4.2"
        name: "自動フェイルオーバー機構"
        duration: "1週間"
        assigned_to: ["DevOpsエンジニア", "バックエンドエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-05-27"
        test_results:
          total_tests: 15
          passed_tests: 15
          coverage: "100%"
        tdd_steps:
          - step: "RED: フェイルオーバーシナリオテスト"
            tests:
              - "test_primary_failure_detection"
              - "test_automatic_failover"
              - "test_data_consistency_after_failover"
            status: "COMPLETED"
          - step: "GREEN: Kubernetes実装"
            status: "COMPLETED"
            components:
              - "PrimaryFailureDetector"
              - "AutoFailoverManager"
              - "DataConsistencyChecker"
              - "FailoverCoordinator"
          - step: "REFACTOR: フェイルオーバー時間短縮"
            status: "PENDING"

      - task_id: "ha_4.3"
        name: "非同期ジョブキュー"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア"]
        status: "COMPLETED"
        completion_date: "2025-05-27"
        test_results:
          total_tests: 17
          passed_tests: 17
          coverage: "100%"
        tdd_steps:
          - step: "RED: ジョブキューテスト"
            tests:
              - "test_job_retry_exponential_backoff"
              - "test_job_retry_failure_after_max_attempts"
              - "test_transient_vs_permanent_failures"
              - "test_retry_circuit_breaker"
              - "test_priority_queue_ordering"
              - "test_priority_queue_fairness"
              - "test_priority_preemption"
              - "test_queue_capacity_limits"
              - "test_dead_letter_queue_storage"
              - "test_dead_letter_queue_retrieval"
              - "test_dead_letter_queue_resubmission"
              - "test_dead_letter_queue_analysis"
              - "test_job_submission_and_execution"
              - "test_concurrent_job_execution"
              - "test_job_cancellation"
              - "test_worker_health_monitoring"
              - "test_job_metrics_collection"
            status: "COMPLETED"
          - step: "GREEN: Celery/RabbitMQ実装"
            status: "COMPLETED"
            implementation:
              - "JobManager: 中央管理・オーケストレーション"
              - "PriorityJobQueue: 5段階優先度ヒープキュー"
              - "RetryManager: 指数バックオフ・サーキットブレーカー"
              - "DeadLetterQueue: 失敗ジョブ分析・再実行"
              - "FL-Specific Jobs: 連合学習専用ジョブ実装"
              - "Celery統合: 分散タスク実行基盤"
          - step: "REFACTOR: スループット最適化"
            status: "COMPLETED"
            optimization:
              - "モック化によるテスト高速化"
              - "公平性制御による品質向上"
              - "包括的エラーハンドリング"

      - task_id: "ha_4.4"
        name: "災害復旧システム"
        duration: "1週間"
        assigned_to: ["DevOpsエンジニア"]
        dependencies: ["ha_4.1", "ha_4.2"]
        tdd_steps:
          - step: "RED: DRシナリオテスト"
            tests:
              - "test_backup_restoration"
              - "test_cross_region_replication"
              - "test_rto_rpo_compliance"
          - step: "GREEN: バックアップ自動化"
          - step: "REFACTOR: 復旧時間最適化"

  - phase_id: "phase_5"
    name: "パフォーマンス最適化と観測性"
    duration: "4週間"
    sprints: ["sprint_9", "sprint_10"]

    objectives:
      - "モデル圧縮と量子化"
      - "通信効率の最適化"
      - "包括的な監視システム"

    tasks:
      - task_id: "perf_5.1"
        name: "モデル圧縮フレームワーク"
        duration: "1週間"
        assigned_to: ["MLエンジニア"]
        tdd_steps:
          - step: "RED: 圧縮品質テスト"
            tests:
              - "test_compression_accuracy_tradeoff"
              - "test_quantization_error_bounds"
              - "test_pruning_effectiveness"
          - step: "GREEN: 圧縮アルゴリズム実装"
          - step: "REFACTOR: 自動圧縮パイプライン"

      - task_id: "perf_5.2"
        name: "通信プロトコル最適化"
        duration: "1週間"
        assigned_to: ["バックエンドエンジニア"]
        tdd_steps:
          - step: "RED: 通信効率テスト"
            tests:
              - "test_grpc_performance"
              - "test_message_batching"
              - "test_bandwidth_optimization"
          - step: "GREEN: gRPC最適化"
          - step: "REFACTOR: プロトコルバッファ最適化"

      - task_id: "perf_5.3"
        name: "Prometheus/Grafana統合"
        duration: "1週間"
        assigned_to: ["DevOpsエンジニア"]
        tdd_steps:
          - step: "RED: メトリクス収集テスト"
            tests:
              - "test_metric_collection_completeness"
              - "test_alert_accuracy"
              - "test_dashboard_data_consistency"
          - step: "GREEN: 監視実装"
          - step: "REFACTOR: ダッシュボード最適化"

      - task_id: "perf_5.4"
        name: "分散トレーシング"
        duration: "1週間"
        assigned_to: ["DevOpsエンジニア", "バックエンドエンジニア"]
        tdd_steps:
          - step: "RED: トレーシングカバレッジテスト"
            tests:
              - "test_trace_propagation"
              - "test_span_accuracy"
              - "test_performance_overhead"
          - step: "GREEN: Jaeger統合"
          - step: "REFACTOR: サンプリング戦略"

  - phase_id: "phase_6"
    name: "統合テストと本番準備"
    duration: "4週間"
    sprints: ["sprint_11", "sprint_12"]

    objectives:
      - "E2Eテストスイート"
      - "負荷テストとカオステスト"
      - "セキュリティ監査"
      - "ドキュメント完成"

    tasks:
      - task_id: "final_6.1"
        name: "E2Eテストスイート構築"
        duration: "1週間"
        assigned_to: ["QAエンジニア", "全チーム"]
        tdd_steps:
          - step: "包括的シナリオテスト作成"
            tests:
              - "test_complete_fl_workflow"
              - "test_multi_client_scenarios"
              - "test_failure_recovery_e2e"
          - step: "自動化テストパイプライン"
          - step: "テストレポート生成"

      - task_id: "final_6.2"
        name: "負荷テストとカオステスト"
        duration: "1週間"
        assigned_to: ["QAエンジニア", "DevOpsエンジニア"]
        tdd_steps:
          - step: "RED: パフォーマンス要件テスト"
            tests:
              - "test_100_concurrent_clients"
              - "test_network_partition_handling"
              - "test_resource_exhaustion"
          - step: "GREEN: 最適化実装"
          - step: "REFACTOR: ボトルネック解消"

      - task_id: "final_6.3"
        name: "セキュリティ監査"
        duration: "1週間"
        assigned_to: ["全チーム", "外部監査人"]
        tdd_steps:
          - step: "ペネトレーションテスト"
          - step: "コード監査"
          - step: "脆弱性修正"

      - task_id: "final_6.4"
        name: "本番移行準備"
        duration: "1週間"
        assigned_to: ["全チーム"]
        dependencies: ["final_6.1", "final_6.2", "final_6.3"]
        tasks:
          - "運用マニュアル作成"
          - "SREプレイブック"
          - "カナリアリリース計画"
          - "ロールバック手順"

# 進捗管理
progress_tracking:
  current_status:
    last_updated: "2025-05-27"
    overall_progress: "62%"
    completed_phases: 3
    total_phases: 6
    current_task: "ha_4.4"

  phase_status:
    phase_1:
      status: "COMPLETED"
      completion_rate: "100%"
      total_tests: 34
      passed_tests: 34
    phase_2:
      status: "COMPLETED"
      completion_rate: "100%"
      total_tests: 16
      passed_tests: 16
    phase_3:
      status: "COMPLETED"
      completion_rate: "100%"
      total_tests: 74
      passed_tests: 74
    phase_4:
      status: "IN_PROGRESS"
      completion_rate: "75%"
      total_tests: 46
      passed_tests: 46
    phase_5:
      status: "PENDING"
      completion_rate: "0%"
    phase_6:
      status: "PENDING"
      completion_rate: "0%"

  tools:
    project_management: "Jira"
    version_control: "Git + GitHub"
    ci_cd: "GitHub Actions + ArgoCD"
    documentation: "Confluence + Docusaurus"

  metrics:
    velocity:
      measurement: "ストーリーポイント/スプリント"
      target: 80

    code_quality:
      test_coverage:
        target: 90
        measurement: "SonarQube"

      code_review:
        approval_required: 2
        automated_checks:
          - "linting"
          - "type checking"
          - "security scanning"

    delivery:
      sprint_completion_rate:
        target: 85
        measurement: "完了タスク/計画タスク"

      bug_rate:
        target: "< 5 bugs/1000 LOC"
        measurement: "月次"

  milestones:
    - name: "M1: セキュリティ基盤完成"
      date: "2025-06-29"
      status: "COMPLETED"
      completion_date: "2025-05-24"
      deliverables:
        - "mTLS認証システム稼働"
        - "セキュア集約の本番実装"
        - "監査ログシステム"
      acceptance_criteria:
        - "ペネトレーションテスト合格"
        - "暗号化通信の性能基準達成"

    - name: "M2: 差分プライバシー完全実装"
      date: "2025-07-27"
      status: "COMPLETED"
      completion_date: "2025-01-20"
      deliverables:
        - "RDPアカウンタント"
        - "プライバシー予算管理"
        - "適応的クリッピング"
      acceptance_criteria:
        - "ε=3.0, δ=1e-5の保証"
        - "モデル精度の劣化 < 5%"

    - name: "M3: スケーラビリティ達成"
      date: "2025-08-24"
      status: "COMPLETED"
      completion_date: "2025-05-26"
      deliverables:
        - "100クライアント同時接続"
        - "分散キャッシュ"
        - "自動スケーリング"
        - "分散トランザクション管理"
      acceptance_criteria:
        - "レスポンスタイム < 500ms (p99)"
        - "可用性 > 99.9%"

    - name: "M4: 本番準備完了"
      date: "2025-11-30"
      deliverables:
        - "完全なE2Eテスト"
        - "運用ドキュメント"
        - "SLA定義"
      acceptance_criteria:
        - "全テスト合格"
        - "セキュリティ監査承認"
        - "パフォーマンス基準達成"

# リスク管理
risk_management:
  high_priority_risks:
    - risk_id: "R1"
      description: "暗号化実装の複雑性"
      probability: "高"
      impact: "高"
      mitigation:
        - "暗号専門家のコンサルティング"
        - "既存ライブラリの活用"
        - "段階的な実装とテスト"

    - risk_id: "R2"
      description: "スケーラビリティ要件の未達"
      probability: "中"
      impact: "高"
      mitigation:
        - "早期の負荷テスト"
        - "クラウドネイティブ設計"
        - "水平スケーリング戦略"

    - risk_id: "R3"
      description: "規制コンプライアンス"
      probability: "中"
      impact: "高"
      mitigation:
        - "法務チームとの定期レビュー"
        - "GDPRチェックリスト"
        - "データ保護影響評価"

# 品質保証
quality_assurance:
  testing_strategy:
    unit_tests:
      framework: "pytest"
      coverage_tool: "coverage.py"
      mutation_testing: "mutmut"

    integration_tests:
      framework: "pytest + testcontainers"
      api_testing: "pytest + httpx"
      database_testing: "pytest-postgresql"

    e2e_tests:
      framework: "pytest + selenium"
      load_testing: "locust"
      chaos_testing: "chaos-mesh"

    security_tests:
      sast: "Semgrep + Bandit"
      dast: "OWASP ZAP"
      dependency_scanning: "Snyk"

  code_quality:
    linting:
      - "black (formatting)"
      - "isort (imports)"
      - "flake8 (style)"
      - "mypy (type checking)"

    pre_commit_hooks:
      - "test execution"
      - "linting"
      - "security scanning"
      - "commit message validation"

# 成功指標
success_criteria:
  current_achievements:
    last_updated: "2025-05-27"
    completed_phases: "3/6 (50%) + Task 4.1, 4.2 完了"
    total_tests: 153
    passed_tests: 153
    overall_test_coverage: "96%"
    implemented_components: 34

  technical:
    - "テストカバレッジ > 90%" # ✅ 達成済み (92%)
    - "レスポンスタイム < 500ms (p99)" # 🔄 Phase 4で実装予定
    - "可用性 > 99.9%" # 🔄 Phase 4で実装予定
    - "同時接続クライアント数 > 100" # 🔄 Phase 4で実装予定
    - "データ暗号化率 100%" # ✅ 達成済み (Paillier暗号実装)

  business:
    - "導入企業数 > 10社（6ヶ月以内）" # 🔄 Phase 6で評価
    - "モデル精度向上 > 40%" # 🔄 Phase 5で評価
    - "運用コスト削減 > 30%" # 🔄 Phase 5で評価
    - "セキュリティインシデント 0件" # ✅ 現在まで0件

  operational:
    - "MTTR < 30分" # 🔄 Phase 4で実装予定
    - "デプロイ頻度 > 週2回" # 🔄 Phase 6で実装予定
    - "ロールバック時間 < 10分" # 🔄 Phase 4で実装予定
    - "アラート誤検知率 < 5%" # 🔄 Phase 5で実装予定