# docker-compose.yml

version: '3.8'

services:
  # フロントエンドサービス
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    network_mode: "host"
    command: npm run dev

  # バックエンドサービス
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - ./backups:/app/backups
    environment:
      - ENVIRONMENT=development
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_NAME=startup_wellness_analyze
      - DB_USER=postgres
      - DB_PASSWORD=1spel!2stack3win
      - DATABASE_URL=postgresql://postgres:1spel!2stack3win@localhost:5432/startup_wellness_analyze
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    network_mode: "host"
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # データベースサービス
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=startup_wellness_analyze
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1spel!2stack3win
    ports:
      - "5432:5432"
    network_mode: "host"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

# 永続化用のボリューム定義
volumes:
  postgres_data:
    name: wellness_postgres_data
  frontend_node_modules:
    name: wellness_frontend_node_modules
  frontend_dist:
    name: wellness_frontend_dist

# ネットワーク定義
networks:
  frontend_net:
    driver: bridge
  backend_net:
    driver: bridge